#!/bin/bash

APP_ROOT="$PWD/$(dirname "$0")"
for ((i=0; i<2; i++)); do APP_ROOT="$(dirname "$APP_ROOT")"; done
APP_ROOT="${APP_ROOT/\/\/}"

# Bundle directories
CONTENTS_DIR="$APP_ROOT/Contents"
RES_DIR="$CONTENTS_DIR/Resources"
ETC_DIR="$RES_DIR/etc"
LIB_DIR="$RES_DIR/lib"
BIN_DIR="$RES_DIR/bin"
DATA_DIR="$RES_DIR/share"

# Shell environment
export PATH="/bin:/usr/bin:$BIN_DIR"
export BUNDLE_BIN_DIR="$BIN_DIR"
export BUNDLE_LIB_DIR="$LIB_DIR"

# XDG environment
export XDG_CONFIG_DIRS="$ETC_DIR/xdg"
export XDG_DATA_DIRS="$DATA_DIR"
export XDG_CONFIG_HOME="$HOME/.config"

# GTK environment
export GTK_PATH="$RES_DIR"
export GTK_EXE_PREFIX="$RES_DIR"
export GTK_DATA_PREFIX="$RES_DIR"
export GTK2_RC_FILES="$ETC_DIR/gtk-2.0/gtkrc"
export GTK_IM_MODULE_FILE="$ETC_DIR/gtk-2.0/gtk.immodules"
export GDK_PIXBUF_MODULE_FILE="$ETC_DIR/gtk-2.0/gdk-pixbuf.loaders"
export PANGO_RC_FILE="$ETC_DIR/pango/pangorc"

# Spek/GStreamer environment
export DYLD_LIBRARY_PATH="$LIB_DIR"
export GST_PLUGIN_SYSTEM_PATH="$LIB_DIR/gstreamer-0.10"
export SPEK_CONFIG_DIR="$XDG_CONFIG_HOME/spek"
SPEK_OPTIONS=""
SPEK_EXEC_NAME=Spek
SPEK_BIN="$BIN_DIR/spek"

# FIXME
# pango.modules sucks - it doesn't like paths with spaces,
# so even though everything else works fine, we still
# will explode, so instead I'm just showing this lame dialog.
if [[ "$APP_ROOT" =~ [[:space:]] ]]; then
	osascript &>/dev/null <<EOF
	tell application "System Events"
		activate
		display dialog "A space was detected in the path to Spek. Currently this is unsupported.\n\nRename or move Spek.app to a path without spaces.\n\nPath: $APP_ROOT" with title "Error" with icon caution buttons { "OK" } default button 1
	end tell
EOF
	exit 1
fi

# mkdir -p "$SPEK_CONFIG_DIR"

exec -a $SPEK_EXEC_NAME "$SPEK_BIN"
